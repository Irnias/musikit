{"version":3,"file":"static/webpack/static\\development\\pages\\main.js.14dd2440e4e482aec39a.hot-update.js","sources":["webpack:///./pages/main.js"],"sourcesContent":["import 'isomorphic-fetch'\r\nimport React from 'react'\r\nimport axios from 'axios'\r\nimport { connect } from \"react-redux\"\r\nimport { setToken, setUserData, setCurrentlyPlaying, setUserPlaylists, setFeaturedPlaylists, setTopArtists } from \"../store\"\r\nimport Header from '../components/Header'\r\nimport Aside from '../components/Aside'\r\nimport Principal from '../components/Principal'\r\n\r\n\r\nclass Main extends React.Component {\r\n\r\n  async componentDidMount() {\r\n\r\n    const { dispatch } = this.props;\r\n\r\n    const hash = window.location.hash\r\n     .substring(1)\r\n      .split(\"&\")\r\n      .reduce(function(initial, item) {\r\n        if (item) {\r\n          var parts = item.split(\"=\");\r\n          initial[parts[0]] = decodeURIComponent(parts[1]);\r\n        }\r\n        return initial;\r\n      }, {}\r\n    );\r\n    \r\n    //Axiios fetch\r\n    const nameRequest =               await axios.get(\"https://api.spotify.com/v1/me\",                        { headers: { Authorization: \"Bearer \" + hash.access_token}})\r\n    const userPlaylistsRequest =      await axios.get(\"https://api.spotify.com/v1/me/playlists\",              { headers: { Authorization: \"Bearer \" + hash.access_token}})\r\n    const currentlyPlayingRequest =   await axios.get(\"https://api.spotify.com/v1/me/player\",                 { headers: { Authorization: \"Bearer \" + hash.access_token}})\r\n    const featuredPlaylistsRequest =  await axios.get(\"https://api.spotify.com/v1/browse/featured-playlists\", { headers: { Authorization: \"Bearer \" + hash.access_token}})\r\n    const topArtistsRequest =         await axios.get(\"https://api.spotify.com/v1/me/top/artists\",            { headers: { Authorization: \"Bearer \" + hash.access_token}})\r\n\r\n    dispatch(setToken(hash.access_token));\r\n    dispatch(setUserData(nameRequest.data));\r\n    dispatch(setUserPlaylists(userPlaylistsRequest.data.items));\r\n    dispatch(setCurrentlyPlaying(currentlyPlayingRequest.data));\r\n    dispatch(setFeaturedPlaylists(featuredPlaylistsRequest.data));\r\n    dispatch(setTopArtists(topArtistsRequest.data.items));\r\n\r\n  }\r\n\r\n  render(){\r\n    return( \r\n      <React.Fragment>\r\n          <Header title=\"MusikIT | Main\" />\r\n          <Aside />\r\n          <Principal />\r\n          {/* <Player /> */}\r\n        </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect()(Main)"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;AAIA;AAEA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;;AADA;;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;AADA;;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;AADA;;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;AADA;;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AAGA;AACA;AAEA;AAAA;AAMA;;;;AA3CA;AACA;AA6CA;;;;A","sourceRoot":""}