{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport 'isomorphic-fetch';\nimport React from 'react';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { setToken, setUserData, setCurrentlyPlaying, setUserPlaylists, setFeaturedPlaylists, setTopArtists } from \"../store\";\nimport Header from '../components/Header';\nimport Aside from '../components/Aside';\nimport Principal from '../components/Principal';\n\nvar Main =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Main, _React$Component);\n\n  function Main() {\n    _classCallCheck(this, Main);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Main).apply(this, arguments));\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var dispatch, hash, nameRequest, userPlaylistsRequest, currentlyPlayingRequest, featuredPlaylistsRequest, topArtistsRequest;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch = this.props.dispatch;\n                hash = window.location.hash.substring(1).split(\"&\").reduce(function (initial, item) {\n                  if (item) {\n                    var parts = item.split(\"=\");\n                    initial[parts[0]] = decodeURIComponent(parts[1]);\n                  }\n\n                  return initial;\n                }, {}); //Axiios fetch\n\n                _context.next = 4;\n                return axios.get(\"https://api.spotify.com/v1/me\", {\n                  headers: {\n                    Authorization: \"Bearer \" + hash.access_token\n                  }\n                });\n\n              case 4:\n                nameRequest = _context.sent;\n                _context.next = 7;\n                return axios.get(\"https://api.spotify.com/v1/me/playlists\", {\n                  headers: {\n                    Authorization: \"Bearer \" + hash.access_token\n                  }\n                });\n\n              case 7:\n                userPlaylistsRequest = _context.sent;\n                _context.next = 10;\n                return axios.get(\"https://api.spotify.com/v1/me/player\", {\n                  headers: {\n                    Authorization: \"Bearer \" + hash.access_token\n                  }\n                });\n\n              case 10:\n                currentlyPlayingRequest = _context.sent;\n                _context.next = 13;\n                return axios.get(\"https://api.spotify.com/v1/browse/featured-playlists\", {\n                  headers: {\n                    Authorization: \"Bearer \" + hash.access_token\n                  }\n                });\n\n              case 13:\n                featuredPlaylistsRequest = _context.sent;\n                _context.next = 16;\n                return axios.get(\"https://api.spotify.com/v1/me/top/artists\", {\n                  headers: {\n                    Authorization: \"Bearer \" + hash.access_token\n                  }\n                });\n\n              case 16:\n                topArtistsRequest = _context.sent;\n                dispatch(setToken(hash.access_token));\n                dispatch(setUserData(nameRequest.data));\n                dispatch(setUserPlaylists(userPlaylistsRequest.data.items));\n                dispatch(setCurrentlyPlaying(currentlyPlayingRequest.data));\n                dispatch(setFeaturedPlaylists(featuredPlaylistsRequest.data));\n                dispatch(setTopArtists(topArtistsRequest.data.items));\n\n              case 23:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(Header, {\n        title: \"MusikIT | Main\"\n      }), __jsx(Aside, null));\n    }\n  }]);\n\n  return Main;\n}(React.Component);\n\nexport default connect()(Main);","map":{"version":3,"sources":["C:/Users/r.n.daccorso.rosati/OneDrive - est.frba.utn.edu.ar/Curso/CourseIT/musikit/pages/main.js"],"names":["React","axios","connect","setToken","setUserData","setCurrentlyPlaying","setUserPlaylists","setFeaturedPlaylists","setTopArtists","Header","Aside","Principal","Main","dispatch","props","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","get","headers","Authorization","access_token","nameRequest","userPlaylistsRequest","currentlyPlayingRequest","featuredPlaylistsRequest","topArtistsRequest","data","items","Component"],"mappings":";;;;;;;;AAAA,OAAO,kBAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,mBAAhC,EAAqDC,gBAArD,EAAuEC,oBAAvE,EAA6FC,aAA7F,QAAkH,UAAlH;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;IAGMC,I;;;;;;;;;;;;;;;;;;;;;;AAIMC,gBAAAA,Q,GAAa,KAAKC,K,CAAlBD,Q;AAEFE,gBAAAA,I,GAAOC,MAAM,CAACC,QAAP,CAAgBF,IAAhB,CACXG,SADW,CACD,CADC,EAEVC,KAFU,CAEJ,GAFI,EAGVC,MAHU,CAGH,UAASC,OAAT,EAAkBC,IAAlB,EAAwB;AAC9B,sBAAIA,IAAJ,EAAU;AACR,wBAAIC,KAAK,GAAGD,IAAI,CAACH,KAAL,CAAW,GAAX,CAAZ;AACAE,oBAAAA,OAAO,CAACE,KAAK,CAAC,CAAD,CAAN,CAAP,GAAoBC,kBAAkB,CAACD,KAAK,CAAC,CAAD,CAAN,CAAtC;AACD;;AACD,yBAAOF,OAAP;AACD,iBATU,EASR,EATQ,C,EAYb;;;uBACwCpB,KAAK,CAACwB,GAAN,CAAU,+BAAV,EAAkE;AAAEC,kBAAAA,OAAO,EAAE;AAAEC,oBAAAA,aAAa,EAAE,YAAYZ,IAAI,CAACa;AAAlC;AAAX,iBAAlE,C;;;AAAlCC,gBAAAA,W;;uBACkC5B,KAAK,CAACwB,GAAN,CAAU,yCAAV,EAAkE;AAAEC,kBAAAA,OAAO,EAAE;AAAEC,oBAAAA,aAAa,EAAE,YAAYZ,IAAI,CAACa;AAAlC;AAAX,iBAAlE,C;;;AAAlCE,gBAAAA,oB;;uBACkC7B,KAAK,CAACwB,GAAN,CAAU,sCAAV,EAAkE;AAAEC,kBAAAA,OAAO,EAAE;AAAEC,oBAAAA,aAAa,EAAE,YAAYZ,IAAI,CAACa;AAAlC;AAAX,iBAAlE,C;;;AAAlCG,gBAAAA,uB;;uBACkC9B,KAAK,CAACwB,GAAN,CAAU,sDAAV,EAAkE;AAAEC,kBAAAA,OAAO,EAAE;AAAEC,oBAAAA,aAAa,EAAE,YAAYZ,IAAI,CAACa;AAAlC;AAAX,iBAAlE,C;;;AAAlCI,gBAAAA,wB;;uBACkC/B,KAAK,CAACwB,GAAN,CAAU,2CAAV,EAAkE;AAAEC,kBAAAA,OAAO,EAAE;AAAEC,oBAAAA,aAAa,EAAE,YAAYZ,IAAI,CAACa;AAAlC;AAAX,iBAAlE,C;;;AAAlCK,gBAAAA,iB;AAENpB,gBAAAA,QAAQ,CAACV,QAAQ,CAACY,IAAI,CAACa,YAAN,CAAT,CAAR;AACAf,gBAAAA,QAAQ,CAACT,WAAW,CAACyB,WAAW,CAACK,IAAb,CAAZ,CAAR;AACArB,gBAAAA,QAAQ,CAACP,gBAAgB,CAACwB,oBAAoB,CAACI,IAArB,CAA0BC,KAA3B,CAAjB,CAAR;AACAtB,gBAAAA,QAAQ,CAACR,mBAAmB,CAAC0B,uBAAuB,CAACG,IAAzB,CAApB,CAAR;AACArB,gBAAAA,QAAQ,CAACN,oBAAoB,CAACyB,wBAAwB,CAACE,IAA1B,CAArB,CAAR;AACArB,gBAAAA,QAAQ,CAACL,aAAa,CAACyB,iBAAiB,CAACC,IAAlB,CAAuBC,KAAxB,CAAd,CAAR;;;;;;;;;;;;;;;;;;6BAIM;AACN,aACE,MAAC,KAAD,CAAO,QAAP,QACI,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAC;AAAd,QADJ,EAEI,MAAC,KAAD,OAFJ,CADF;AAQD;;;;EA3CgBnC,KAAK,CAACoC,S;;AA8CzB,eAAelC,OAAO,GAAGU,IAAH,CAAtB","sourcesContent":["import 'isomorphic-fetch'\r\nimport React from 'react'\r\nimport axios from 'axios'\r\nimport { connect } from \"react-redux\"\r\nimport { setToken, setUserData, setCurrentlyPlaying, setUserPlaylists, setFeaturedPlaylists, setTopArtists } from \"../store\"\r\nimport Header from '../components/Header'\r\nimport Aside from '../components/Aside'\r\nimport Principal from '../components/Principal'\r\n\r\n\r\nclass Main extends React.Component {\r\n\r\n  async componentDidMount() {\r\n\r\n    const { dispatch } = this.props;\r\n\r\n    const hash = window.location.hash\r\n     .substring(1)\r\n      .split(\"&\")\r\n      .reduce(function(initial, item) {\r\n        if (item) {\r\n          var parts = item.split(\"=\");\r\n          initial[parts[0]] = decodeURIComponent(parts[1]);\r\n        }\r\n        return initial;\r\n      }, {}\r\n    );\r\n    \r\n    //Axiios fetch\r\n    const nameRequest =               await axios.get(\"https://api.spotify.com/v1/me\",                        { headers: { Authorization: \"Bearer \" + hash.access_token}})\r\n    const userPlaylistsRequest =      await axios.get(\"https://api.spotify.com/v1/me/playlists\",              { headers: { Authorization: \"Bearer \" + hash.access_token}})\r\n    const currentlyPlayingRequest =   await axios.get(\"https://api.spotify.com/v1/me/player\",                 { headers: { Authorization: \"Bearer \" + hash.access_token}})\r\n    const featuredPlaylistsRequest =  await axios.get(\"https://api.spotify.com/v1/browse/featured-playlists\", { headers: { Authorization: \"Bearer \" + hash.access_token}})\r\n    const topArtistsRequest =         await axios.get(\"https://api.spotify.com/v1/me/top/artists\",            { headers: { Authorization: \"Bearer \" + hash.access_token}})\r\n\r\n    dispatch(setToken(hash.access_token));\r\n    dispatch(setUserData(nameRequest.data));\r\n    dispatch(setUserPlaylists(userPlaylistsRequest.data.items));\r\n    dispatch(setCurrentlyPlaying(currentlyPlayingRequest.data));\r\n    dispatch(setFeaturedPlaylists(featuredPlaylistsRequest.data));\r\n    dispatch(setTopArtists(topArtistsRequest.data.items));\r\n\r\n  }\r\n\r\n  render(){\r\n    return( \r\n      <React.Fragment>\r\n          <Header title=\"MusikIT | Main\" />\r\n          <Aside />\r\n          {/* <Principal /> */}\r\n          {/* <Player /> */}\r\n        </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect()(Main)"]},"metadata":{},"sourceType":"module"}